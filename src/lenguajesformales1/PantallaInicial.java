/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lenguajesformales1;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import otros.AnalizarToken;
import otros.NumerarLineas;
import otros.creartoken;

/**
 *
 * @author alpha
 */
public class PantallaInicial extends javax.swing.JFrame {

    File archivo;
    NumerarLineas numeros;
    ArrayList<String> arreglo= new ArrayList<>();
    creartoken token;
    boolean errores=true;
    AnalizarToken a1;
    JFileChooser buscador = new JFileChooser();
    /**
     * Creates new form PnatallaInicial
     */
    
    
    public PantallaInicial() {
        initComponents();
        numeros= new NumerarLineas(AreaAnalizar);
        jScrollPane1.setRowHeaderView(numeros);
        ButtonInforme.setEnabled(false);
        ButtonRecuento.setEnabled(false);
        ButtonLimpiar.setEnabled(false);
        ButtonGuardar.setEnabled(false);
    }
    public void CrearAnalizarToken(){
        a1 = new AnalizarToken();
        a1.LimpiarArreglo();
        errores=true;
        for (int i = 0; i < arreglo.size(); i++) {
            token= new creartoken(arreglo.get(i).toString(), " ");
            for (int j = 0; j < token.tamañoArreglo(); j++) {
                a1.Analizartoken(token.token()+" ", i);
                
            }
        }   
    }
    public void ImprimirErrores(){
        ButtonInforme.setEnabled(false);
        ButtonRecuento.setEnabled(false);
        for (int j = 0; j < a1.getResultados().size(); j++) {
            if (a1.getResultados().get(j).getIdentificador().equalsIgnoreCase("Error")) {
                TextAreaErrores.append("\n\n");
                TextAreaErrores.append("Error en linea No. "+a1.getResultados().get(j).getLinea());
                TextAreaErrores.append(" columna No."+a1.getResultados().get(j).getColumna()+" ");
                TextAreaErrores.append(" ----> "+a1.getResultados().get(j).getToken()+"\n");
                TextAreaErrores.append("Descripcion del error ");
                TextAreaErrores.append(a1.getResultados().get(j).getDescripcion()+"\n");
                errores=false;
            }
            if (a1.getResultados().get(j).isRecuperado()==true) {
                TextAreaErrores.append(a1.getResultados().get(j).mensajerecuperado());
            }
           
        }
    
    }
     public void GuardarArchivo(File archivo){
        try {
            FileWriter guardado = new FileWriter(archivo);
            guardado.write(AreaAnalizar.getText());
            guardado.close();
            JOptionPane.showMessageDialog(rootPane, "El archivo fue guardado con éxito");
        } catch (Exception e) {
        }
        TextBuscador.setText(archivo.toString());
        TextBuscador.setEnabled(false);
        ButtonBuscar.setEnabled(false);
        
     }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ButtonBuscar = new javax.swing.JButton();
        ButtonAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaAnalizar = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaErrores = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        TextFieldPalabra = new javax.swing.JTextField();
        TextBuscador = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        ButtonInforme = new javax.swing.JButton();
        ButtonRecuento = new javax.swing.JButton();
        ButtonLimpiar = new javax.swing.JButton();
        ButtonGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(50, 50));

        ButtonBuscar.setText("Buscar");
        ButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBuscarActionPerformed(evt);
            }
        });

        ButtonAnalizar.setText("Analizar");
        ButtonAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAnalizarActionPerformed(evt);
            }
        });

        AreaAnalizar.setColumns(20);
        AreaAnalizar.setRows(5);
        jScrollPane1.setViewportView(AreaAnalizar);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        TextAreaErrores.setEditable(false);
        TextAreaErrores.setColumns(20);
        TextAreaErrores.setRows(5);
        jScrollPane2.setViewportView(TextAreaErrores);

        jLabel1.setText("Errores");

        TextFieldPalabra.setText("Buscar palabra...");
        TextFieldPalabra.setActionCommand("<Not Set>");
        TextFieldPalabra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextFieldPalabraMouseClicked(evt);
            }
        });
        TextFieldPalabra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextFieldPalabraKeyPressed(evt);
            }
        });

        TextBuscador.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextBuscador.setText("Buscar Archivo");

        jButton1.setText("Buscar Palabra");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ButtonInforme.setText("Crear Tabla");
        ButtonInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonInformeActionPerformed(evt);
            }
        });

        ButtonRecuento.setText("Recuento Tokens");
        ButtonRecuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRecuentoActionPerformed(evt);
            }
        });

        ButtonLimpiar.setText("Limpiar");
        ButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLimpiarActionPerformed(evt);
            }
        });

        ButtonGuardar.setText("Guardar Archivo");
        ButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFieldPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ButtonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(ButtonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonInforme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonRecuento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonAnalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(TextBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonBuscar)
                .addGap(38, 38, 38)
                .addComponent(ButtonLimpiar)
                .addGap(50, 50, 50)
                .addComponent(TextFieldPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(ButtonInforme)
                .addGap(28, 28, 28)
                .addComponent(ButtonRecuento)
                .addGap(35, 35, 35)
                .addComponent(ButtonGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBuscarActionPerformed
        // TODO add your handling code here:
        
        FileNameExtensionFilter filtro=new FileNameExtensionFilter("txt","txt");
        buscador.setFileFilter(filtro);
        
        int select= buscador.showOpenDialog(this);
        if (select == JFileChooser.APPROVE_OPTION) {
            archivo = buscador.getSelectedFile();
            TextBuscador.setText(archivo.getAbsolutePath());
            TextBuscador.setEnabled(false);
            AreaAnalizar.setText("");
            ButtonLimpiar.setEnabled(true);
            try{
                String linea = null;
                BufferedReader leerFichero = new BufferedReader (new FileReader(archivo.getAbsolutePath()));    
                while( (linea = leerFichero.readLine()) != null){
                    AreaAnalizar.append(linea);
                    AreaAnalizar.append("\n");
            }
                leerFichero.close();
            }catch (Exception ex){  
        //Captura un posible error le imprime en pantalla   
                System.out.println(ex.getMessage());  
            }
            
            
        }
        ButtonBuscar.setEnabled(false);
        
    }//GEN-LAST:event_ButtonBuscarActionPerformed

    private void ButtonAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAnalizarActionPerformed
        // Enviar arreglo para analizar
        if (AreaAnalizar.getText()!="") {
            arreglo.clear();
            TextAreaErrores.setText("");
            if (AreaAnalizar.getText()!=null) {
                int tamañoLineas = AreaAnalizar.getLineCount();
                for (int i = 0; i < tamañoLineas; i++) {
                    try {
                        int lineafin=AreaAnalizar.getLineEndOffset(i);
                        int lineainicio = AreaAnalizar.getLineStartOffset(i);
                        arreglo.add(AreaAnalizar.getText(lineainicio, (lineafin-lineainicio)));
                    } catch (BadLocationException ex) {
                        Logger.getLogger(PantallaInicial.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            
            }
            CrearAnalizarToken();
            ImprimirErrores();
            if (errores==true && a1.getResultados().size()>0) {
                ButtonInforme.setEnabled(true);
                ButtonRecuento.setEnabled(true);
                ButtonGuardar.setEnabled(true);
            }
        }
        
    }//GEN-LAST:event_ButtonAnalizarActionPerformed

    private void TextFieldPalabraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextFieldPalabraMouseClicked
        // TODO add your handling code here:
        if (TextFieldPalabra.getText().equals("Buscar palabra...")) {
            TextFieldPalabra.setText("");
        }
    }//GEN-LAST:event_TextFieldPalabraMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        buscarpalabra(AreaAnalizar, TextFieldPalabra.getText());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TextFieldPalabraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldPalabraKeyPressed
        // TODO add your handling code here:
        if (TextFieldPalabra.getText().length()>2) {
            buscarpalabra(AreaAnalizar, TextFieldPalabra.getText());
        }
    }//GEN-LAST:event_TextFieldPalabraKeyPressed

    private void ButtonInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonInformeActionPerformed
        // TODO add your handling code here:
        TablaTokens a3= new TablaTokens(this, true, a1.getResultados());
        a3.setVisible(true);
    }//GEN-LAST:event_ButtonInformeActionPerformed

    private void ButtonRecuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRecuentoActionPerformed
        // TODO add your handling code here:
        RecuentoToken rec= new RecuentoToken(this, true, a1.getResultados());
        rec.setVisible(true);
        
    }//GEN-LAST:event_ButtonRecuentoActionPerformed

    private void ButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLimpiarActionPerformed
        // TODO add your handling code here:
        String mens= "Para cargar un nuevo Archivo de texto se borrara todo el contenido actual ¿desea cotinuar?";
        int option=JOptionPane.showConfirmDialog(this, mens, "Confirmar Borrado", YES_NO_OPTION);
        if (option==0) {
            TextBuscador.setText("Buscar Archivo...");
            AreaAnalizar.setText("");
            TextBuscador.setEnabled(true);
            ButtonBuscar.setEnabled(false);
            ButtonInforme.setEnabled(false);
            ButtonGuardar.setEnabled(false);
            ButtonRecuento.setEnabled(false);
            ButtonBuscar.setEnabled(true);
        }
    }//GEN-LAST:event_ButtonLimpiarActionPerformed

    private void ButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarActionPerformed
        // TODO add your handling code here:
        buscador.showSaveDialog(this);
        File archivo = buscador.getSelectedFile();
        if (archivo.exists()) {
            int option=JOptionPane.showConfirmDialog(this, "Desea sobreEscribir el archivo", "Archivo Duplicado", YES_NO_OPTION);
            if (option==0) {
                GuardarArchivo(archivo);
            }
        }else{
            GuardarArchivo(archivo);
        }
        
        
        
    }//GEN-LAST:event_ButtonGuardarActionPerformed
    
    public void buscarpalabra(JTextArea area1, String texto) {
        if (texto.length() >= 1) {
            DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);
            Highlighter h = area1.getHighlighter();
            h.removeAllHighlights();
            String text = area1.getText();
            String caracteres = texto;
            Pattern p = Pattern.compile("(?i)" + caracteres);
            Matcher m = p.matcher(text);
            while (m.find()) {
                try {
                    h.addHighlight(m.start(), m.end(), highlightPainter);
                } catch (BadLocationException ex) {
                }
            }
        } else {
            JOptionPane.showMessageDialog(area1, "la palabra a buscar no puede ser vacia");
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaAnalizar;
    private javax.swing.JButton ButtonAnalizar;
    private javax.swing.JButton ButtonBuscar;
    private javax.swing.JButton ButtonGuardar;
    private javax.swing.JButton ButtonInforme;
    private javax.swing.JButton ButtonLimpiar;
    private javax.swing.JButton ButtonRecuento;
    private javax.swing.JTextArea TextAreaErrores;
    private javax.swing.JTextField TextBuscador;
    private javax.swing.JTextField TextFieldPalabra;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
